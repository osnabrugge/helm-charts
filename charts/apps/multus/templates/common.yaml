{{/* Make sure all variables are set properly */}}
{{- include "bjw-s.common.loader.init" . }}

{{/* Append the hardcoded settings */}}
{{- define "multus.harcodedValues" -}}
controller:
  # -- deploy to all nodes
  type: daemonset

# -- force hostnetwork so upgrades can't fail
hostNetwork: true

configMaps:
  config:
    enabled: true
    data:
      daemon-config.json: |
        {
            "chrootDir": "/hostroot",
            "confDir": "/host/etc/cni/net.d",
            "logLevel": "verbose",
            "socketDir": "/host/run/multus/",
            "cniVersion": "{{ .Values.cni.version }}",
            "cniConfigDir": "/host/etc/cni/net.d",
            "multusConfigFile": "auto",
            "multusAutoconfigDir": "/host/etc/cni/net.d"
        }

initContainers:
  # -- Init container that installs reference CNI plugins
  cni-installer:
    name: cni-installer
    # -- CNI installer image
    image: {{ .Values.cni.image.repository }}:{{ .Values.cni.image.tag }}
    imagePullPolicy: {{ .Values.cni.image.pullPolicy }}
    # -- Mounts host CNI binary folder
    volumeMounts:
    - name: cnibin
      mountPath: /host/opt/cni/bin
  # -- Init container that installs reference CNI plugins
  multus-installer:
    name: multus-installer
    image: {{ .Values.image.repository }}:{{ .Values.image.tag }}
    imagePullPolicy: {{ .Values.image.pullPolicy }}
    command:
      - "cp"
      - "/usr/src/multus-cni/bin/multus-shim"
      - "/host/opt/cni/bin/multus-shim"
    resources:
      requests:
        cpu: "10m"
        memory: "15Mi"
    securityContext:
      privileged: true
    # -- Mounts host CNI binary folder
    volumeMounts:
    - name: cnibin
      mountPath: /host/opt/cni/bin

# -- Command used by the Multus installer
command:
- /usr/src/multus-cni/bin/multus-daemon

# -- Need to run as privileged to install
securityContext:
  privileged: true

# -- Configures volumes used by the multus installer.
persistence:
  cni:
    enabled: true
    type: hostPath
    hostPath: {{ .Values.cni.paths.config }}
    hostPathType: Directory
    mountPath: /host/etc/cni/net.d
  cnibin:
    enabled: true
    type: hostPath
    hostPath: {{ .Values.cni.paths.bin }}
    hostPathType: Directory
    mountPath: /host/opt/cni/bin
  config:
    enabled: true
    type: configMap
    name: {{ printf "%s-config" (include "bjw-s.common.lib.chart.names.fullname" $) }}
    mountPath: /etc/cni/net.d/multus.d
    items:
    - key: daemon-config.json
      path: daemon-config.json
  hostroot:
    enabled: true
    type: hostPath
    hostPath: /
    hostPathType: Directory
    mountPath: /hostroot
    mountPropagation: HostToContainer
  host-run:
    enabled: true
    type: hostPath
    hostPath: /run
    #hostPathType: Directory
    mountPath: /host/run
  host-var-lib-cni-multus:
    enabled: true
    type: hostPath
    hostPath: /var/lib/cni/multus
    #hostPathType: Directory
    mountPath: /var/lib/cni/multus
  host-var-lib-kubelet:
    enabled: true
    type: hostPath
    hostPath: /var/lib/kubelet
    #hostPathType: Directory
    mountPath: /var/lib/kubelet
  host-run-k8s-cni-cncf-io:
    enabled: true
    type: hostPath
    hostPath: /run/k8s.cni.cncf.io
    #hostPathType: Directory
    mountPath: /run/k8s.cni.cncf.io
  host-run-netns:
    enabled: true
    type: hostPath
    hostPath: /run/netns/
    #hostPathType: Directory
    mountPath: /run/netns/
    mountPropagation: HostToContainer

serviceAccount:
  # -- create needed service account
  create: true

# -- Disable probes as installer completes after installing
probes:
  liveness:
    enabled: false
  readiness:
    enabled: false
  startup:
    enabled: false

# -- Disable probes as installer completes after installing
service:
  main:
    enabled: false
{{- end -}}


{{- $_ := mergeOverwrite .Values (include "multus.harcodedValues" . | fromYaml) -}}

{{- $_ := set .Values.image "tag" (tpl .Values.image.tag .) -}}

{{/* Render the templates */}}
{{ include "bjw-s.common.loader.all" . }}
